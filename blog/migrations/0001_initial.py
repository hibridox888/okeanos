# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2017-09-20 09:43
from __future__ import unicode_literals

import ckeditor.fields
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import easy_thumbnails.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Entry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_created=True, editable=False, null=True, verbose_name='created')),
                ('modify', models.DateTimeField(auto_now=True, verbose_name='modify')),
                ('pub_date', models.DateTimeField(default=datetime.datetime(2017, 9, 20, 6, 43, 23, 257548), help_text='Para que una publicaci\xf3n sea publicada, debe estar activa y su fecha de publicaci\xf3n debe estar en el pasado', verbose_name='pub date')),
                ('slug', models.SlugField(unique_for_date='pub_date', verbose_name='slug')),
                ('publication_type', models.CharField(choices=[('N', 'New'), ('P', 'Project'), ('E', 'Post'), ('O', 'Other'), ('V', 'Event')], default='E', max_length=1, verbose_name='publication type')),
                ('external_url', models.URLField(blank=True, help_text='Si se deja vac\xedo este campo, los links para ver m\xe1s detalles redireccionar\xe1n dentro del sitio al detalle. Al ingresar una URL en este campo se redireccionar\xe1 a este cuando se pidan detalles ', null=True, verbose_name='external url')),
                ('headline', models.CharField(max_length=200, verbose_name='headline')),
                ('subheadline', models.CharField(blank=True, max_length=200, null=True, verbose_name='subheadline')),
                ('location', models.CharField(blank=True, max_length=40, null=True, verbose_name='location')),
                ('summary', models.CharField(blank=True, max_length=300, null=True, verbose_name='summary')),
                ('content', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='content')),
                ('is_active', models.BooleanField(default=False, help_text='Marque para hacer esta entrada en vivo (ver tambi\xe9n la fecha de publicaci\xf3n). Tenga en cuenta que los administradores (como usted) tienen permiso para previsualizar Entradas inactivas mientras que el p\xfablico en general no', verbose_name='if is active')),
                ('on_slider', models.BooleanField(default=False, help_text='Marque para que sea visible en el slider Se visualizar\xe1 primero el inicial y luego los que sean visibles en slider Pueden marcar hasta 6 para ser visibles, es necesaria una imagen, de no ser subida una im\xe1gen no se mostrar\xe1 ', verbose_name='active in slider')),
                ('facebook_comments', models.BooleanField(default=False, help_text='Marque para que sea visible el plugin de facebook para realizar comentarios No se tendr\xe1 mayor control sobre los comentarios ', verbose_name='to enable facebook comments')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='author')),
            ],
            options={
                'ordering': ('-pub_date',),
                'get_latest_by': 'pub_date',
                'verbose_name': 'entry',
                'verbose_name_plural': 'entries',
            },
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='name')),
                ('file', models.FileField(upload_to='entries/file', verbose_name='file location')),
                ('entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='file_entry', to='blog.Entry', verbose_name='entry')),
            ],
            options={
                'verbose_name': 'file',
                'verbose_name_plural': 'files',
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='name')),
                ('file', easy_thumbnails.fields.ThumbnailerImageField(upload_to='entries/img', verbose_name='file location')),
                ('entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='image_post', to='blog.Entry')),
            ],
            options={
                'verbose_name': 'image',
                'verbose_name_plural': 'images',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30, verbose_name='title')),
            ],
            options={
                'ordering': ('title',),
                'verbose_name': 'tag',
                'verbose_name_plural': 'tags',
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='name')),
                ('file', models.FileField(upload_to='entries/vid', verbose_name='file location')),
                ('entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='video_post', to='blog.Entry')),
            ],
            options={
                'verbose_name': 'video',
                'verbose_name_plural': 'videos',
            },
        ),
        migrations.AddField(
            model_name='entry',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='entry_tag', to='blog.Tag', verbose_name='tag'),
        ),
    ]
